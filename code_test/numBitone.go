package main

import (
	"fmt"
)

/*******************************************************************************
* 函数名称: numBitOne
* 函数功能: 获取一个正整数的二进制形式并输出其二进制表达式中1的个数
* 相关文档: 编程题_12级
* 函数参数: 2个
* 参数名称:          类型                输入/输出         描述
* u32nums            uint32              输入              输入的正整数
* pu32cnt            *uint32             输出              正整数二进制中1的个数
*
* 返回值: int，用于返回函数执行结果，0表示执行成功，-1表示执行失败
*******************************************************************************/
func numBitOne(u32nums uint32, pu32cnt *uint32) int {
	if pu32cnt == nil {
		return -1 // 输出指针为空，执行失败
	}

	var count uint32 = 0
	n := u32nums

	// 使用位运算统计二进制中1的个数
	for n > 0 {
		count += n & 1
		n >>= 1
	}

	*pu32cnt = count
	return 0 // 执行成功
}

func main() {
	// 测试用例 1
	var cnt1 uint32
	numBitOne(11, &cnt1)
	fmt.Printf("输入: 11, 二进制: %b, 1的个数: %d\n", 11, cnt1) // 输出: 3

}
